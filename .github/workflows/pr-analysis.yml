name: PR Version Analysis

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  analyze-version-bump:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze commits for version bump
        id: analyze
        run: |
          echo "🔍 Analyzing commits in PR #${{ github.event.pull_request.number }}"

          # Get commits in this PR
          COMMITS=$(git log --pretty=%B origin/main..HEAD 2>/dev/null || git log --pretty=%B HEAD~1..HEAD)

          echo "📝 Commits found:"
          echo "$COMMITS"
          echo "---"

          BUMP="patch"
          REASON="Default patch bump"

          # Check for breaking changes
          if echo "$COMMITS" | grep -Ei "(^|\n)(feat|fix|chore|docs|style|refactor|perf|test|ci)(\(.*\))?!:.*|BREAKING CHANGE" >/dev/null; then
            BUMP="major"
            REASON="🚨 Breaking change detected (conventional commit with ! or BREAKING CHANGE)"
          # Check for features
          elif echo "$COMMITS" | grep -Ei "(^|\n)feat(\(.*\))?:.*" >/dev/null; then
            BUMP="minor"
            REASON="✨ New feature detected (conventional commit with feat:)"
          elif echo "$COMMITS" | grep -Ei "(^|\n)fix(\(.*\))?:.*" >/dev/null; then
            BUMP="patch"
            REASON="🐛 Bug fix detected (conventional commit with fix:)"
          else
            REASON="📦 Other changes detected (chores, docs, style, etc.)"
          fi

          # Get current version
          CURRENT_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          VERSION_NUMBERS=$(echo "$CURRENT_TAG" | sed 's/^v//')
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NUMBERS"

          case $BUMP in
            major)
              NEW_VERSION="v$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_VERSION="v$MAJOR.$((MINOR + 1)).0"
              ;;
            patch)
              NEW_VERSION="v$MAJOR.$MINOR.$((PATCH + 1))"
              ;;
          esac

          echo "📊 Version Analysis:"
          echo "Current version: $CURRENT_TAG"
          echo "Suggested bump: $BUMP"
          echo "New version would be: $NEW_VERSION"
          echo "Reason: $REASON"

          echo "bump=$BUMP" >> "$GITHUB_OUTPUT"
          echo "reason=$REASON" >> "$GITHUB_OUTPUT"
          echo "current_version=$CURRENT_TAG" >> "$GITHUB_OUTPUT"
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const bump = '${{ steps.analyze.outputs.bump }}';
            const reason = '${{ steps.analyze.outputs.reason }}';
            const currentVersion = '${{ steps.analyze.outputs.current_version }}';
            const newVersion = '${{ steps.analyze.outputs.new_version }}';

            const body = `## 📦 Version Analysis

            **Current Version:** \`${currentVersion}\`
            **Suggested Bump:** \`${bump}\`
            **New Version:** \`${newVersion}\`

            **Reason:** ${reason}

            ### What happens next?
            When this PR is merged to \`main\`, the automated release workflow will:
            1. Create version \`${newVersion}\`
            2. Update \`CHANGELOG.md\` with the changes
            3. Create a git tag
            4. Build and release the binaries
            5. Create a GitHub release

            ### 💡 Tips for Better Releases
            - Use [conventional commits](https://conventionalcommits.org/) for automatic version bumping
            - Start commits with \`feat:\` for minor bumps
            - Start commits with \`fix:\` for patch bumps
            - Add \`!\` for breaking changes (major bumps)`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24.x

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race ./...

    - name: Build with version injection
      run: |
        # Build with version information injected
        go build -ldflags "-X github.com/ambiyansyah-risyal/klayengo.Version=${{ github.ref_name }} -X github.com/ambiyansyah-risyal/klayengo.GitCommit=${{ github.sha }} -X github.com/ambiyansyah-risyal/klayengo.BuildDate=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" -o bin/klayengo .

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        CURRENT_TAG=${{ github.ref_name }}

        if [ -n "$PREVIOUS_TAG" ] && [ "$PREVIOUS_TAG" != "$CURRENT_TAG" ]; then
          # Generate changelog between tags
          echo "## Changes in $CURRENT_TAG" >> changelog.md
          echo "" >> changelog.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG >> changelog.md
        else
          echo "## Release $CURRENT_TAG" >> changelog.md
          echo "" >> changelog.md
          echo "- Release $CURRENT_TAG" >> changelog.md
        fi

        # Add installation instructions
        echo "" >> changelog.md
        echo "### Installation" >> changelog.md
        echo "\`\`\`bash" >> changelog.md
        echo "go get github.com/ambiyansyah-risyal/klayengo@$CURRENT_TAG" >> changelog.md
        echo "\`\`\`" >> changelog.md

        # Read the changelog
        {
          echo 'CHANGELOG<<EOF'
          cat changelog.md
          echo EOF
        } >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
